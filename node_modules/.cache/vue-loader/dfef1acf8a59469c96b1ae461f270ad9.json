{"remainingRequest":"C:\\Users\\calen\\documents\\github\\project-megabunus-portal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\calen\\documents\\github\\project-megabunus-portal\\src\\components\\index.vue?vue&type=template&id=47323bf2&","dependencies":[{"path":"C:\\Users\\calen\\documents\\github\\project-megabunus-portal\\src\\components\\index.vue","mtime":1623571858603},{"path":"C:\\Users\\calen\\documents\\github\\project-megabunus-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1620124874993},{"path":"C:\\Users\\calen\\documents\\github\\project-megabunus-portal\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1620124892110},{"path":"C:\\Users\\calen\\documents\\github\\project-megabunus-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1620124874993},{"path":"C:\\Users\\calen\\documents\\github\\project-megabunus-portal\\node_modules\\vue-loader\\lib\\index.js","mtime":1620124892108}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
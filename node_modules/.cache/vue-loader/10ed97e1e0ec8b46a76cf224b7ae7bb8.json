{"remainingRequest":"C:\\Users\\calen\\documents\\GitHub\\project-megabunus-portal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\calen\\documents\\GitHub\\project-megabunus-portal\\src\\components\\index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\calen\\documents\\GitHub\\project-megabunus-portal\\src\\components\\index.vue","mtime":1620124892927},{"path":"C:\\Users\\calen\\documents\\GitHub\\project-megabunus-portal\\node_modules\\css-loader\\dist\\cjs.js","mtime":1620124876158},{"path":"C:\\Users\\calen\\documents\\GitHub\\project-megabunus-portal\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1620124892109},{"path":"C:\\Users\\calen\\documents\\GitHub\\project-megabunus-portal\\node_modules\\postcss-loader\\src\\index.js","mtime":1620124888876},{"path":"C:\\Users\\calen\\documents\\GitHub\\project-megabunus-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1620124874993},{"path":"C:\\Users\\calen\\documents\\GitHub\\project-megabunus-portal\\node_modules\\vue-loader\\lib\\index.js","mtime":1620124892108}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLm5ldHdvcmsgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDEwMCU7DQp9DQoNCi5lbC1zZWxlY3QgLmVsLWlucHV0IHsNCiAgd2lkdGg6IDEzMHB4Ow0KfQ0KDQouYm90dG9tIHsNCiAgei1pbmRleDogOTk3Ow0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIGJvdHRvbTogMDsNCiAgbWFyZ2luLWxlZnQ6IDIwcHg7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQogIGRpc3BsYXk6IGZsZXg7DQogIGZsZXgtd3JhcDogbm93cmFwOw0KfQ0KDQoudG9wIHsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICB0b3A6IDA7DQogIGxlZnQ6IDA7DQogIHotaW5kZXg6IDk5NjsNCiAgcGFkZGluZy1sZWZ0OiAyMHB4Ow0KICBwYWRkaW5nLXJpZ2h0OiAyMHB4Ow0KfQ0KDQoudGl0bGUgew0KICBmb250LXNpemU6IDM1cHg7DQogIGZvbnQtd2VpZ2h0OiBib2xkOw0KICBjb2xvcjogcmdiKDAsIDAsIDApOw0KICBsaW5lLWhlaWdodDogMi4yNTsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAocA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <p class=\"title top\" @dblclick=\"editLevel\">{{level.localization.cn}}</p>\r\n    <div class=\"bottom\">\r\n      <el-tooltip effect=\"dark\" content=\"Save changes\" placement=\"top\">\r\n        <el-button @click=\"composeLevel\">SAVE</el-button>\r\n      </el-tooltip>\r\n      <el-tooltip effect=\"dark\" content=\"Add new clips\" placement=\"top\">\r\n        <el-button @click=\"addClip\">Add Clip</el-button>\r\n      </el-tooltip>\r\n      <el-tooltip effect=\"dark\" content=\"Return to main menu\" placement=\"top\">\r\n        <el-button @click=\"goBackToMainMenu\">Main Menu</el-button>\r\n      </el-tooltip>\r\n      <el-tooltip effect=\"dark\" content=\"Delete the existing level\" placement=\"top\">\r\n        <el-button @click=\"triggerDeleteWarning\">Delete Level</el-button>\r\n      </el-tooltip>\r\n      <el-tooltip effect=\"dark\" content=\"For advanced/development usages\" placement=\"top\">\r\n        <el-button @click=\"showImportJson\">Import Json</el-button>\r\n      </el-tooltip>\r\n      <el-tooltip effect=\"dark\" content=\"For advanced/development usages\" placement=\"top\">\r\n        <el-button @click=\"exportJson\">Export Json</el-button>\r\n      </el-tooltip>\r\n    </div>\r\n    <el-drawer title=\"EDIT LEVEL\" :visible.sync=\"isEditLevel\">\r\n      <el-form style=\"padding:15px;\">\r\n        <el-form-item label=\"Level Name\">\r\n          <el-input\r\n            style=\"margin-bottom:10px;\"\r\n            type=\"text\"\r\n            placeholder=\"level chinese name...\"\r\n            v-model=\"level.localization.cn\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item lavel = \"Level Texts\">\r\n          <el-input\r\n            style=\"margin-bottom:10px;\"\r\n            type=\"text\"\r\n            placeholder=\"level english name...\"\r\n            v-model=\"level.localization.en\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-input\r\n            style=\"margin-bottom:10px;\"\r\n            type=\"text\"\r\n            placeholder=\"Super Text...\"\r\n            v-model=\"level.SuperText\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-input\r\n            style=\"margin-bottom:10px;\"\r\n            type=\"text\"\r\n            placeholder=\"OK Text...\"\r\n            v-model=\"level.OKText\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-input\r\n            style=\"margin-bottom:10px;\"\r\n            type=\"text\"\r\n            placeholder=\"Failed Text...\"\r\n            v-model=\"level.FailedText\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-drawer>\r\n    <el-drawer title=\"EDIT CLIP\" :visible.sync=\"isEditClip\">\r\n      <el-form style=\"padding:15px;\">\r\n        <el-collapse accordion>\r\n          <el-collapse-item title=\"Clip Settings\">\r\n            <el-form-item label=\"CLIP NAME\">\r\n              <el-input\r\n                style=\"margin-bottom:10px;\"\r\n                type=\"text\"\r\n                placeholder=\"clip name...\"\r\n                v-model=\"level.clips[currentClipIndex].name\"\r\n              />\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-select\r\n                style=\"width:100%;\"\r\n                v-model=\"level.clips[currentClipIndex].importance\"\r\n                placeholder=\"clip重要度\"\r\n                filterable\r\n              >\r\n                <el-option\r\n                  v-for=\"(importance,index) in importances\"\r\n                  :key=\"index\"\r\n                  :label=\"importance\"\r\n                  :value=\"index\"\r\n                ></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-switch\r\n                active-text=\"是结局\"\r\n                inactive-text=\"不是结局\"\r\n                v-model=\"level.clips[currentClipIndex].isEnding\"\r\n                style=\"width:100%;\"\r\n              />\r\n              <el-tooltip effect=\"dark\" content=\"Delete clip\" placement=\"top\">\r\n                <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"deleteClip\"></el-button>\r\n              </el-tooltip>\r\n            </el-form-item>\r\n          </el-collapse-item>\r\n          <el-collapse-item title=\"Play List\">\r\n            <el-form-item>\r\n              <el-input\r\n                style=\"margin-bottom:10px;\"\r\n                v-for=\"(url,index) in level.clips[currentClipIndex].playList\"\r\n                :key=\"index\"\r\n                type=\"text\"\r\n                placeholder=\"video url...\"\r\n                v-model=\"level.clips[currentClipIndex].playList[index]\"\r\n              />\r\n              <el-tooltip effect=\"dark\" content=\"Add new url\" placement=\"top\">\r\n                <el-button type=\"info\" icon=\"el-icon-plus\" circle @click=\"addUrl\"></el-button>\r\n              </el-tooltip>\r\n              <el-tooltip effect=\"dark\" content=\"Delete url\" placement=\"top\">\r\n                <el-button type=\"danger\" icon=\"el-icon-minus\" circle @click=\"deleteUrl\"></el-button>\r\n              </el-tooltip>\r\n            </el-form-item>\r\n          </el-collapse-item>\r\n          <el-collapse-item title=\"Choice Settings\">\r\n            <el-form-item\r\n              :inline=\"true\"\r\n              label=\"CHOICES\"\r\n              v-if=\"!level.clips[currentClipIndex].isEnding\"\r\n            >\r\n              <div\r\n                style=\"margin-bottom:10px; margin-top:10px;\"\r\n                v-for=\"(choice,index) in level.clips[currentClipIndex].choices\"\r\n                :key=\"index\"\r\n              >\r\n                <el-input placeholder=\"中文选项名...\" v-model=\"choice.localization.cn\" type=\"text\">\r\n                  <el-select\r\n                    v-model=\"choice.nextClipNum\"\r\n                    placeholder=\"请选择后续clip\"\r\n                    filterable\r\n                    slot=\"prepend\"\r\n                  >\r\n                    <el-option\r\n                      v-for=\"(clip,index) in level.clips\"\r\n                      :key=\"index\"\r\n                      :label=\"clip.name\"\r\n                      :value=\"index\"\r\n                    ></el-option>\r\n                  </el-select>\r\n                </el-input>\r\n                <el-input\r\n                  style=\"margin-top:10px\"\r\n                  placeholder=\"English choice text...\"\r\n                  v-model=\"choice.localization.en\"\r\n                  type=\"text\"\r\n                />\r\n                <el-switch\r\n                  v-model=\"level.clips[currentClipIndex].choices[index].correctness\"\r\n                  active-text=\"正确\"\r\n                  inactive-text=\"错误\"\r\n                  style=\"width:100%;\"\r\n                />\r\n              </div>\r\n              <el-form-item>\r\n                <el-tooltip effect=\"dark\" content=\"Add new choice\" placement=\"top\">\r\n                  <el-button type=\"success\" icon=\"el-icon-plus\" circle @click=\"addChoice\"></el-button>\r\n                </el-tooltip>\r\n                <el-tooltip effect=\"dark\" content=\"Delete choice\" placement=\"top\">\r\n                  <el-button type=\"info\" icon=\"el-icon-minus\" circle @click=\"minusChoice\"></el-button>\r\n                </el-tooltip>\r\n              </el-form-item>\r\n            </el-form-item>\r\n          </el-collapse-item>\r\n        </el-collapse>\r\n      </el-form>\r\n    </el-drawer>\r\n    <el-dialog title=\"Warning\" :visible.sync=\"warningDialogFormVisible\">\r\n      <span>Are you sure that you want to delete the level?</span>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"warningDialogFormVisible = false\">Cancel</el-button>\r\n        <el-button type=\"primary\" @click=\"deleteLevel\">Confirm</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <el-dialog title=\"ImportJson\" :visible.sync=\"showImportJsonDialog\">\r\n      <el-input type=\"textarea\" :rows=\"3\" placeholder=\"paste json here\" v-model=\"rawJson\"></el-input>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"showImportJsonDialog = false\">Cancel</el-button>\r\n        <el-button type=\"primary\" @click=\"importJson\">Confirm</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <network\r\n      class=\"network\"\r\n      ref=\"network\"\r\n      :nodes=\"nodes\"\r\n      :edges=\"edges\"\r\n      :options=\"options\"\r\n      @double-click=\"editClip\"\r\n    ></network>\r\n  </div>\r\n</template>\r\n<script>\r\nimport store from \"../store.js\";\r\nimport { Loading } from \"element-ui\";\r\nexport default {\r\n  name: \"index\",\r\n  store,\r\n  data() {\r\n    return {\r\n      level: {\r\n        localization: {\r\n          cn: \"\",\r\n          en: \"\",\r\n        },\r\n        clips: [\r\n          {\r\n            playList: [\"https://a.com/a.mp4\", \"https://a.com/b.mp4\"],\r\n            isEnding: true,\r\n          },\r\n        ],\r\n      },\r\n      currentClipIndex: 0,\r\n      isEditClip: false,\r\n      isEditLevel: false,\r\n      nodes: [],\r\n      edges: [],\r\n      options: {\r\n        nodes: {\r\n          shape: \"box\",\r\n          color: \"#7ca4ca\",\r\n        },\r\n        edges: {\r\n          arrows: \"to\",\r\n          smooth: {\r\n            enabled: true,\r\n            type: \"cubicBezier\",\r\n            roundness: 0.5,\r\n            forceDirection: \"vertical\",\r\n          },\r\n        },\r\n        layout: {\r\n          improvedLayout: true,\r\n          hierarchical: {\r\n            enabled: false,\r\n            levelSeparation: 150,\r\n            nodeSpacing: 100,\r\n            treeSpacing: 200,\r\n            blockShifting: true,\r\n            edgeMinimization: true,\r\n            parentCentralization: true,\r\n            direction: \"UD\", // UD, DU, LR, RL\r\n            sortMethod: \"directed\", // hubsize, directed\r\n          },\r\n        },\r\n        interaction: {\r\n          hover: true,\r\n        },\r\n      },\r\n      rawJson: \"\",\r\n      warningDialogFormVisible: false,\r\n      showImportJsonDialog: false,\r\n      importances: [\"Important\", \"OK\", \"Not Important\"],\r\n    };\r\n  },\r\n  components: {\r\n    network: require(\"vue-vis-network\").Network,\r\n  },\r\n  beforeMount() {\r\n    this.loadLevel();\r\n  },\r\n  beforeUpdate() {\r\n    this.renderMindMap();\r\n  },\r\n  methods: {\r\n    loadLevel() {\r\n      this.$store.store\r\n        .dispatch(\"getLevel\", sessionStorage.getItem(\"levelId\"))\r\n        .then(() => {\r\n          setTimeout(() => {\r\n            var level = this.$store.store.state.level;\r\n            this.level = level;\r\n            this.renderMindMap();\r\n          }, 200);\r\n        });\r\n    },\r\n    renderMindMap() {\r\n      var level = this.level;\r\n      var nodeArr = [];\r\n      var edgeArr = [];\r\n      for (let i = 0; i < level.clips.length; i++) {\r\n        var label = \"\";\r\n        if (!level.clips[i].isEnding) {\r\n          label = level.clips[i].name;\r\n          let choices = level.clips[i].choices;\r\n          for (let j = 0; j < choices.length; j++) {\r\n            edgeArr.push({\r\n              from: i,\r\n              to: choices[j].nextClipNum,\r\n            });\r\n          }\r\n        } else {\r\n          label = level.clips[i].name + \" ENDING\";\r\n        }\r\n        nodeArr.push({\r\n          id: i,\r\n          label: label,\r\n        });\r\n      }\r\n      this.nodes = nodeArr;\r\n      this.edges = edgeArr;\r\n    },\r\n    editLevel() {\r\n      this.isEditLevel = true;\r\n    },\r\n    addClip() {\r\n      var name = \"Clip\" + (this.level.clips.length + 1).toString();\r\n      var keyName = \"CLIP\" + this.level.clips.length.toString() + \"_CHOICE0\";\r\n      this.level.clips.push({\r\n        name: name,\r\n        playList: [],\r\n        isEnding: false,\r\n        importance: 1,\r\n        choices: [\r\n          {\r\n            keyName: keyName,\r\n            correctness: true,\r\n            nextClipNum: 0,\r\n            localization: {\r\n              cn: \"\",\r\n              en: \"\",\r\n            },\r\n          },\r\n        ],\r\n      });\r\n    },\r\n    editClip(e) {\r\n      if (e.nodes.length > 0) {\r\n        this.isEditClip = true;\r\n        this.currentClipIndex = e.nodes[0];\r\n      }\r\n      return;\r\n    },\r\n    triggerDeleteWarning() {\r\n      this.warningDialogFormVisible = true;\r\n    },\r\n    deleteClip() {\r\n      this.isEditClip = false;\r\n      var index = this.currentClipIndex;\r\n      this.currentClipIndex = 0;\r\n      this.level.clips.splice(index, 1);\r\n    },\r\n    addChoice() {\r\n      var clip = this.level.clips[this.currentClipIndex];\r\n      var keyName =\r\n        \"CLIP\" +\r\n        this.currentClipIndex.toString() +\r\n        \"_CHOICE\" +\r\n        clip.choices.length.toString();\r\n      if (clip.choices.length <= 2) {\r\n        clip.choices.push({\r\n          keyName: keyName,\r\n          nextClipNum: 0,\r\n          correctness: true,\r\n          localization: {\r\n            cn: \"\",\r\n            en: \"\",\r\n          },\r\n        });\r\n      } else {\r\n        alert(\"Exceeds maximum clips\");\r\n      }\r\n    },\r\n    minusChoice() {\r\n      var clip = this.level.clips[this.currentClipIndex];\r\n      clip.choices.pop();\r\n    },\r\n    addUrl() {\r\n      var clip = this.level.clips[this.currentClipIndex];\r\n      for (let url of clip.playList) {\r\n        if (url == \"\") {\r\n          alert(\"Please fill in the existing blank url first!\");\r\n          return;\r\n        }\r\n      }\r\n      clip.playList.push(\"\");\r\n    },\r\n    deleteUrl() {\r\n      var clip = this.level.clips[this.currentClipIndex];\r\n      if (clip.playList.length >= 1) {\r\n        clip.playList.pop();\r\n      }\r\n    },\r\n    composeLevel() {\r\n      let loadingInstance = Loading.service({\r\n        lock: true,\r\n        text: \"Uploading\",\r\n        spinner: \"el-icon-loading\",\r\n        background: \"rgba(0, 0, 0, 0.7)\",\r\n      });\r\n      this.$store.store.dispatch(\"updateLevel\", this.level).then(() => {\r\n        this.$store.store.dispatch(\"upload\").then(() => {\r\n          loadingInstance.close();\r\n          const h = this.$createElement;\r\n          this.$notify({\r\n            title: \"上传结果\",\r\n            message: h(\r\n              \"i\",\r\n              { style: \"color: teal\" },\r\n              \"Upload success! Please refresh the page to see the saved changes\"\r\n            ),\r\n          });\r\n          location.reload();\r\n        });\r\n      });\r\n    },\r\n    deleteLevel() {\r\n      this.$store.store\r\n        .dispatch(\"deleteLevel\", sessionStorage.getItem(\"levelId\"))\r\n        .then(() => {\r\n          setTimeout(() => {\r\n            console.log(\"deletion success\");\r\n            sessionStorage.setItem(\"showLevelDetail\", false);\r\n            location.reload();\r\n          }, 200);\r\n        });\r\n    },\r\n    goBackToMainMenu() {\r\n      sessionStorage.setItem(\"showLevelDetail\", false);\r\n      location.reload();\r\n    },\r\n    showImportJson() {\r\n      this.showImportJsonDialog = true;\r\n    },\r\n    importJson() {\r\n      this.level = JSON.parse(this.rawJson);\r\n      this.showImportJsonDialog = false;\r\n    },\r\n    exportJson() {\r\n      console.log(JSON.stringify(this.level));\r\n      const h = this.$createElement;\r\n      this.$notify({\r\n        title: \"Exort Success\",\r\n        message: h(\r\n          \"i\",\r\n          { style: \"color: teal\" },\r\n          \"Json has been printed in the dev console\"\r\n        ),\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.network {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.el-select .el-input {\r\n  width: 130px;\r\n}\r\n\r\n.bottom {\r\n  z-index: 997;\r\n  position: absolute;\r\n  bottom: 0;\r\n  margin-left: 20px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n}\r\n\r\n.top {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 996;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n}\r\n\r\n.title {\r\n  font-size: 35px;\r\n  font-weight: bold;\r\n  color: rgb(0, 0, 0);\r\n  line-height: 2.25;\r\n}\r\n</style>"]}]}